/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics, as well as [SDKs and libraries](https://help.vouchsafe.id/en/articles/12026847-vouchsafe-sdks-and-libraries) for popular languages.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FlowTemplate } from './FlowTemplate';
import {
    FlowTemplateFromJSON,
    FlowTemplateFromJSONTyped,
    FlowTemplateToJSON,
    FlowTemplateToJSONTyped,
} from './FlowTemplate';

/**
 * Input for creating a new team
 * @export
 * @interface CreateTeamInput
 */
export interface CreateTeamInput {
    /**
     * The name of the team.
     * @type {string}
     * @memberof CreateTeamInput
     */
    name: string;
    /**
     * The public name of the team, shown in end-user facing screens and communications. If set, overrides the name.
     * @type {string}
     * @memberof CreateTeamInput
     */
    public_name?: string;
    /**
     * Path to the team's logo image.
     * @type {string}
     * @memberof CreateTeamInput
     */
    logo_url?: string;
    /**
     * Email addresses of users to add as team administrators.
     * @type {Array<string>}
     * @memberof CreateTeamInput
     */
    team_admin_emails: Array<string>;
    /**
     * 
     * @type {FlowTemplate}
     * @memberof CreateTeamInput
     */
    flow_template?: FlowTemplate;
}



/**
 * Check if a given object implements the CreateTeamInput interface.
 */
export function instanceOfCreateTeamInput(value: object): value is CreateTeamInput {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('team_admin_emails' in value) || value['team_admin_emails'] === undefined) return false;
    return true;
}

export function CreateTeamInputFromJSON(json: any): CreateTeamInput {
    return CreateTeamInputFromJSONTyped(json, false);
}

export function CreateTeamInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTeamInput {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'public_name': json['public_name'] == null ? undefined : json['public_name'],
        'logo_url': json['logo_url'] == null ? undefined : json['logo_url'],
        'team_admin_emails': json['team_admin_emails'],
        'flow_template': json['flow_template'] == null ? undefined : FlowTemplateFromJSON(json['flow_template']),
    };
}

export function CreateTeamInputToJSON(json: any): CreateTeamInput {
    return CreateTeamInputToJSONTyped(json, false);
}

export function CreateTeamInputToJSONTyped(value?: CreateTeamInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'public_name': value['public_name'],
        'logo_url': value['logo_url'],
        'team_admin_emails': value['team_admin_emails'],
        'flow_template': FlowTemplateToJSON(value['flow_template']),
    };
}

