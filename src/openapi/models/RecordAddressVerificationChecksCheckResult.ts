/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CheckResult } from './CheckResult';
import {
    CheckResultFromJSON,
    CheckResultFromJSONTyped,
    CheckResultToJSON,
    CheckResultToJSONTyped,
} from './CheckResult';

/**
 * Construct a type with a set of properties K of type T
 * @export
 * @interface RecordAddressVerificationChecksCheckResult
 */
export interface RecordAddressVerificationChecksCheckResult {
    /**
     * 
     * @type {CheckResult}
     * @memberof RecordAddressVerificationChecksCheckResult
     */
    pOSTCODEEXISTS: CheckResult;
    /**
     * 
     * @type {CheckResult}
     * @memberof RecordAddressVerificationChecksCheckResult
     */
    aDDRESSEXISTS: CheckResult;
    /**
     * 
     * @type {CheckResult}
     * @memberof RecordAddressVerificationChecksCheckResult
     */
    pERSONLIVESATADDRESS: CheckResult;
}

/**
 * Check if a given object implements the RecordAddressVerificationChecksCheckResult interface.
 */
export function instanceOfRecordAddressVerificationChecksCheckResult(value: object): value is RecordAddressVerificationChecksCheckResult {
    if (!('pOSTCODEEXISTS' in value) || value['pOSTCODEEXISTS'] === undefined) return false;
    if (!('aDDRESSEXISTS' in value) || value['aDDRESSEXISTS'] === undefined) return false;
    if (!('pERSONLIVESATADDRESS' in value) || value['pERSONLIVESATADDRESS'] === undefined) return false;
    return true;
}

export function RecordAddressVerificationChecksCheckResultFromJSON(json: any): RecordAddressVerificationChecksCheckResult {
    return RecordAddressVerificationChecksCheckResultFromJSONTyped(json, false);
}

export function RecordAddressVerificationChecksCheckResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordAddressVerificationChecksCheckResult {
    if (json == null) {
        return json;
    }
    return {
        
        'pOSTCODEEXISTS': CheckResultFromJSON(json['POSTCODE_EXISTS']),
        'aDDRESSEXISTS': CheckResultFromJSON(json['ADDRESS_EXISTS']),
        'pERSONLIVESATADDRESS': CheckResultFromJSON(json['PERSON_LIVES_AT_ADDRESS']),
    };
}

export function RecordAddressVerificationChecksCheckResultToJSON(json: any): RecordAddressVerificationChecksCheckResult {
    return RecordAddressVerificationChecksCheckResultToJSONTyped(json, false);
}

export function RecordAddressVerificationChecksCheckResultToJSONTyped(value?: RecordAddressVerificationChecksCheckResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'POSTCODE_EXISTS': CheckResultToJSON(value['pOSTCODEEXISTS']),
        'ADDRESS_EXISTS': CheckResultToJSON(value['aDDRESSEXISTS']),
        'PERSON_LIVES_AT_ADDRESS': CheckResultToJSON(value['pERSONLIVESATADDRESS']),
    };
}

