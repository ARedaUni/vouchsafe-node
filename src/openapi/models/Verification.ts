/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Status } from './Status';
import {
    StatusFromJSON,
    StatusFromJSONTyped,
    StatusToJSON,
    StatusToJSONTyped,
} from './Status';

/**
 * 
 * @export
 * @interface Verification
 */
export interface Verification {
    /**
     * Unique ID for tracking a verification session over time
     * @type {string}
     * @memberof Verification
     */
    id: string;
    /**
     * 
     * @type {Status}
     * @memberof Verification
     */
    status: Status;
    /**
     * When it was originally requested or begun
     * @type {string}
     * @memberof Verification
     */
    created_at: string;
    /**
     * When the user will stop getting reminders
     * @type {string}
     * @memberof Verification
     */
    expires_at: string;
    /**
     * The originally supplied email address
     * @type {string}
     * @memberof Verification
     */
    email: string | null;
    /**
     * Where to send the user upon success. If null, the verification flow default will be used.
     * @type {string}
     * @memberof Verification
     */
    redirect_url: string | null;
    /**
     * The verification flow it belongs to
     * @type {string}
     * @memberof Verification
     */
    workflow_id: string;
    /**
     * An identifier from your own systems, to avoid needing to store Vouchsafe's own ID. Provided at request time.
     * @type {string}
     * @memberof Verification
     */
    external_id: string | null;
}



/**
 * Check if a given object implements the Verification interface.
 */
export function instanceOfVerification(value: object): value is Verification {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('created_at' in value) || value['created_at'] === undefined) return false;
    if (!('expires_at' in value) || value['expires_at'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('redirect_url' in value) || value['redirect_url'] === undefined) return false;
    if (!('workflow_id' in value) || value['workflow_id'] === undefined) return false;
    if (!('external_id' in value) || value['external_id'] === undefined) return false;
    return true;
}

export function VerificationFromJSON(json: any): Verification {
    return VerificationFromJSONTyped(json, false);
}

export function VerificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Verification {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'status': StatusFromJSON(json['status']),
        'created_at': json['created_at'],
        'expires_at': json['expires_at'],
        'email': json['email'],
        'redirect_url': json['redirect_url'],
        'workflow_id': json['workflow_id'],
        'external_id': json['external_id'],
    };
}

export function VerificationToJSON(json: any): Verification {
    return VerificationToJSONTyped(json, false);
}

export function VerificationToJSONTyped(value?: Verification | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'status': StatusToJSON(value['status']),
        'created_at': value['created_at'],
        'expires_at': value['expires_at'],
        'email': value['email'],
        'redirect_url': value['redirect_url'],
        'workflow_id': value['workflow_id'],
        'external_id': value['external_id'],
    };
}

