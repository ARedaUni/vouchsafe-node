/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthenticateRequestBody
 */
export interface AuthenticateRequestBody {
    /**
     * 
     * @type {string}
     * @memberof AuthenticateRequestBody
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof AuthenticateRequestBody
     */
    clientSecret: string;
}

/**
 * Check if a given object implements the AuthenticateRequestBody interface.
 */
export function instanceOfAuthenticateRequestBody(value: object): value is AuthenticateRequestBody {
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('clientSecret' in value) || value['clientSecret'] === undefined) return false;
    return true;
}

export function AuthenticateRequestBodyFromJSON(json: any): AuthenticateRequestBody {
    return AuthenticateRequestBodyFromJSONTyped(json, false);
}

export function AuthenticateRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthenticateRequestBody {
    if (json == null) {
        return json;
    }
    return {
        
        'clientId': json['client_id'],
        'clientSecret': json['client_secret'],
    };
}

export function AuthenticateRequestBodyToJSON(json: any): AuthenticateRequestBody {
    return AuthenticateRequestBodyToJSONTyped(json, false);
}

export function AuthenticateRequestBodyToJSONTyped(value?: AuthenticateRequestBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client_id': value['clientId'],
        'client_secret': value['clientSecret'],
    };
}

