/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics, as well as [SDKs and libraries](https://help.vouchsafe.id/en/articles/12026847-vouchsafe-sdks-and-libraries) for popular languages.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RequestVerificationResponse
 */
export interface RequestVerificationResponse {
    /**
     * A unique URL to redirect the user to or embed in an iframe
     * @type {string}
     * @memberof RequestVerificationResponse
     */
    url: string;
    /**
     * A unique ID for the verification session, for you to track progress
     * @type {string}
     * @memberof RequestVerificationResponse
     */
    id: string;
    /**
     * The flow it belongs to
     * @type {string}
     * @memberof RequestVerificationResponse
     */
    workflow_id?: string;
    /**
     * When the user will stop getting reminders
     * @type {string}
     * @memberof RequestVerificationResponse
     */
    expires_at: string;
}

/**
 * Check if a given object implements the RequestVerificationResponse interface.
 */
export function instanceOfRequestVerificationResponse(value: object): value is RequestVerificationResponse {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('expires_at' in value) || value['expires_at'] === undefined) return false;
    return true;
}

export function RequestVerificationResponseFromJSON(json: any): RequestVerificationResponse {
    return RequestVerificationResponseFromJSONTyped(json, false);
}

export function RequestVerificationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestVerificationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'id': json['id'],
        'workflow_id': json['workflow_id'] == null ? undefined : json['workflow_id'],
        'expires_at': json['expires_at'],
    };
}

export function RequestVerificationResponseToJSON(json: any): RequestVerificationResponse {
    return RequestVerificationResponseToJSONTyped(json, false);
}

export function RequestVerificationResponseToJSONTyped(value?: RequestVerificationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'id': value['id'],
        'workflow_id': value['workflow_id'],
        'expires_at': value['expires_at'],
    };
}

