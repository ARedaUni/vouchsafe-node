/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics, as well as [SDKs and libraries](https://help.vouchsafe.id/en/articles/12026847-vouchsafe-sdks-and-libraries) for popular languages.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const Reason = {
    InvalidPostcode: 'INVALID_POSTCODE',
    InvalidAddress: 'INVALID_ADDRESS',
    MedMatchPersonAtAddress: 'MED_MATCH_PERSON_AT_ADDRESS',
    LowMatchPersonAtAddress: 'LOW_MATCH_PERSON_AT_ADDRESS',
    NoIdentityMatch: 'NO_IDENTITY_MATCH',
    NoResidencyMatch: 'NO_RESIDENCY_MATCH'
} as const;
export type Reason = typeof Reason[keyof typeof Reason];


export function instanceOfReason(value: any): boolean {
    for (const key in Reason) {
        if (Object.prototype.hasOwnProperty.call(Reason, key)) {
            if (Reason[key as keyof typeof Reason] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ReasonFromJSON(json: any): Reason {
    return ReasonFromJSONTyped(json, false);
}

export function ReasonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reason {
    return json as Reason;
}

export function ReasonToJSON(value?: Reason | null): any {
    return value as any;
}

export function ReasonToJSONTyped(value: any, ignoreDiscriminator: boolean): Reason {
    return value as Reason;
}

