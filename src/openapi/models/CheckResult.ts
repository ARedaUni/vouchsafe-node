/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics, as well as [SDKs and libraries](https://help.vouchsafe.id/en/articles/12026847-vouchsafe-sdks-and-libraries) for popular languages.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CheckState } from './CheckState';
import {
    CheckStateFromJSON,
    CheckStateFromJSONTyped,
    CheckStateToJSON,
    CheckStateToJSONTyped,
} from './CheckState';
import type { Reason } from './Reason';
import {
    ReasonFromJSON,
    ReasonFromJSONTyped,
    ReasonToJSON,
    ReasonToJSONTyped,
} from './Reason';

/**
 * 
 * @export
 * @interface CheckResult
 */
export interface CheckResult {
    /**
     * 
     * @type {CheckState}
     * @memberof CheckResult
     */
    state: CheckState;
    /**
     * 
     * @type {Reason}
     * @memberof CheckResult
     */
    reason?: Reason;
}



/**
 * Check if a given object implements the CheckResult interface.
 */
export function instanceOfCheckResult(value: object): value is CheckResult {
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function CheckResultFromJSON(json: any): CheckResult {
    return CheckResultFromJSONTyped(json, false);
}

export function CheckResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckResult {
    if (json == null) {
        return json;
    }
    return {
        
        'state': CheckStateFromJSON(json['state']),
        'reason': json['reason'] == null ? undefined : ReasonFromJSON(json['reason']),
    };
}

export function CheckResultToJSON(json: any): CheckResult {
    return CheckResultToJSONTyped(json, false);
}

export function CheckResultToJSONTyped(value?: CheckResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'state': CheckStateToJSON(value['state']),
        'reason': ReasonToJSON(value['reason']),
    };
}

