/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics, as well as [SDKs and libraries](https://help.vouchsafe.id/en/articles/12026847-vouchsafe-sdks-and-libraries) for popular languages.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SmartLookupInput
 */
export interface SmartLookupInput {
    /**
     * Should be taken from GET /postcode endpoint
     * @type {string}
     * @memberof SmartLookupInput
     */
    first_line_of_address: string;
    /**
     * 
     * @type {string}
     * @memberof SmartLookupInput
     */
    postcode: string;
    /**
     * 
     * @type {string}
     * @memberof SmartLookupInput
     */
    first_name: string;
    /**
     * 
     * @type {string}
     * @memberof SmartLookupInput
     */
    last_name: string;
    /**
     * Experimental, other checks coming soon
     * @type {Array<string>}
     * @memberof SmartLookupInput
     */
    checks: Array<SmartLookupInputChecksEnum>;
}


/**
 * @export
 */
export const SmartLookupInputChecksEnum = {
    Address: 'Address'
} as const;
export type SmartLookupInputChecksEnum = typeof SmartLookupInputChecksEnum[keyof typeof SmartLookupInputChecksEnum];


/**
 * Check if a given object implements the SmartLookupInput interface.
 */
export function instanceOfSmartLookupInput(value: object): value is SmartLookupInput {
    if (!('first_line_of_address' in value) || value['first_line_of_address'] === undefined) return false;
    if (!('postcode' in value) || value['postcode'] === undefined) return false;
    if (!('first_name' in value) || value['first_name'] === undefined) return false;
    if (!('last_name' in value) || value['last_name'] === undefined) return false;
    if (!('checks' in value) || value['checks'] === undefined) return false;
    return true;
}

export function SmartLookupInputFromJSON(json: any): SmartLookupInput {
    return SmartLookupInputFromJSONTyped(json, false);
}

export function SmartLookupInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): SmartLookupInput {
    if (json == null) {
        return json;
    }
    return {
        
        'first_line_of_address': json['first_line_of_address'],
        'postcode': json['postcode'],
        'first_name': json['first_name'],
        'last_name': json['last_name'],
        'checks': json['checks'],
    };
}

export function SmartLookupInputToJSON(json: any): SmartLookupInput {
    return SmartLookupInputToJSONTyped(json, false);
}

export function SmartLookupInputToJSONTyped(value?: SmartLookupInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'first_line_of_address': value['first_line_of_address'],
        'postcode': value['postcode'],
        'first_name': value['first_name'],
        'last_name': value['last_name'],
        'checks': value['checks'],
    };
}

