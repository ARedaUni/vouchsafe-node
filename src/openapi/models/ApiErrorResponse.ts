/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiErrorResponse
 */
export interface ApiErrorResponse {
    /**
     * 
     * @type {number}
     * @memberof ApiErrorResponse
     */
    status_code: number;
    /**
     * 
     * @type {string}
     * @memberof ApiErrorResponse
     */
    message: string;
    /**
     * 
     * @type {any}
     * @memberof ApiErrorResponse
     */
    error_detail?: any | null;
}

/**
 * Check if a given object implements the ApiErrorResponse interface.
 */
export function instanceOfApiErrorResponse(value: object): value is ApiErrorResponse {
    if (!('status_code' in value) || value['status_code'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function ApiErrorResponseFromJSON(json: any): ApiErrorResponse {
    return ApiErrorResponseFromJSONTyped(json, false);
}

export function ApiErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiErrorResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status_code': json['status_code'],
        'message': json['message'],
        'error_detail': json['error_detail'] == null ? undefined : json['error_detail'],
    };
}

export function ApiErrorResponseToJSON(json: any): ApiErrorResponse {
    return ApiErrorResponseToJSONTyped(json, false);
}

export function ApiErrorResponseToJSONTyped(value?: ApiErrorResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status_code': value['status_code'],
        'message': value['message'],
        'error_detail': value['error_detail'],
    };
}

