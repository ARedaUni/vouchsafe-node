/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiErrorResponse,
  RequestVerificationRequestBody,
  RequestVerificationResponse,
  Status,
  Verification,
} from '../models/index';
import {
    ApiErrorResponseFromJSON,
    ApiErrorResponseToJSON,
    RequestVerificationRequestBodyFromJSON,
    RequestVerificationRequestBodyToJSON,
    RequestVerificationResponseFromJSON,
    RequestVerificationResponseToJSON,
    StatusFromJSON,
    StatusToJSON,
    VerificationFromJSON,
    VerificationToJSON,
} from '../models/index';

export interface GetVerificationRequest {
    id: string;
}

export interface ListVerificationsRequest {
    status?: Status;
}

export interface RequestVerificationRequest {
    requestVerificationRequestBody: RequestVerificationRequestBody;
}

/**
 * 
 */
export class VerificationsApi extends runtime.BaseAPI {

    /**
     * Get a single verification by ID.  Returns the latest status and metadata for a verification you previously requested.  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async getVerificationRaw(requestParameters: GetVerificationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Verification>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getVerification().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/verifications/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => VerificationFromJSON(jsonValue));
    }

    /**
     * Get a single verification by ID.  Returns the latest status and metadata for a verification you previously requested.  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async getVerification(requestParameters: GetVerificationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Verification> {
        const response = await this.getVerificationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * List all verifications for your team.  This can be a long list, so filtering by status is recommended.  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async listVerificationsRaw(requestParameters: ListVerificationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Verification>>> {
        const queryParameters: any = {};

        if (requestParameters['status'] != null) {
            queryParameters['status'] = requestParameters['status'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/verifications`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(VerificationFromJSON));
    }

    /**
     * List all verifications for your team.  This can be a long list, so filtering by status is recommended.  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async listVerifications(requestParameters: ListVerificationsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Verification>> {
        const response = await this.listVerificationsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Request a new verification.  Provide the user\'s email and the ID of one of your verification flows to send them through.  Vouchsafe will respond with:  - a URL to redirect to the user to - a unique ID for you to track the verification  If you have enabled \"On request creation\" emails in your flow, this also sends them an email.  You can optionally provide more information/claims about the user, like their name, date of birth and address. Any that are provided will be checked against evidence the user gives, and mismatches will be flagged.  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async requestVerificationRaw(requestParameters: RequestVerificationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestVerificationResponse>> {
        if (requestParameters['requestVerificationRequestBody'] == null) {
            throw new runtime.RequiredError(
                'requestVerificationRequestBody',
                'Required parameter "requestVerificationRequestBody" was null or undefined when calling requestVerification().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/verifications`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RequestVerificationRequestBodyToJSON(requestParameters['requestVerificationRequestBody']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RequestVerificationResponseFromJSON(jsonValue));
    }

    /**
     * Request a new verification.  Provide the user\'s email and the ID of one of your verification flows to send them through.  Vouchsafe will respond with:  - a URL to redirect to the user to - a unique ID for you to track the verification  If you have enabled \"On request creation\" emails in your flow, this also sends them an email.  You can optionally provide more information/claims about the user, like their name, date of birth and address. Any that are provided will be checked against evidence the user gives, and mismatches will be flagged.  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async requestVerification(requestParameters: RequestVerificationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestVerificationResponse> {
        const response = await this.requestVerificationRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
