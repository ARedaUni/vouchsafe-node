/* tslint:disable */
/* eslint-disable */
/**
 * Vouchsafe API docs
 * Vouchsafe offers a REST API to conduct operations programmatically.  You can request and manage verifications, as well as perform smart lookups.  To use the API, you need a client ID and secret from the Vouchsafe dashboard. [Sign up here](https://app.vouchsafe.id/) if you haven\'t already.  We also have a [video guide](https://www.youtube.com/playlist?list=PLx6V6SSTMuF_ZNWBPnysvwmdIwboLViE8) showing the basics, as well as [SDKs and libraries](https://help.vouchsafe.id/en/articles/12026847-vouchsafe-sdks-and-libraries) for popular languages.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: help@vouchsafe.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiErrorResponse,
  Flow,
} from '../models/index';
import {
    ApiErrorResponseFromJSON,
    ApiErrorResponseToJSON,
    FlowFromJSON,
    FlowToJSON,
} from '../models/index';

export interface GetFlowRequest {
    id: string;
}

/**
 * 
 */
export class FlowsApi extends runtime.BaseAPI {

    /**
     *  Get a specific verification flow.  Use an ID from one of these flows to request verifications with the  [`POST /verifications` endpoint](https://localhost:3000/docs/operations/RequestVerification).  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async getFlowRaw(requestParameters: GetFlowRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Flow>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getFlow().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/flows/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FlowFromJSON(jsonValue));
    }

    /**
     *  Get a specific verification flow.  Use an ID from one of these flows to request verifications with the  [`POST /verifications` endpoint](https://localhost:3000/docs/operations/RequestVerification).  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async getFlow(requestParameters: GetFlowRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Flow> {
        const response = await this.getFlowRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     *  Get a list of all the currently published verification flows.  Use an ID from one of these flows to request verifications with the  [`POST /verifications` endpoint](https://localhost:3000/docs/operations/RequestVerification).  Referee-specific verification flows cannot be started independently, so are not returned by this endpoint.  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async listFlowsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Flow>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/flows`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(FlowFromJSON));
    }

    /**
     *  Get a list of all the currently published verification flows.  Use an ID from one of these flows to request verifications with the  [`POST /verifications` endpoint](https://localhost:3000/docs/operations/RequestVerification).  Referee-specific verification flows cannot be started independently, so are not returned by this endpoint.  > This endpoint supports sandbox mode. [See how sandbox mode works](https://help.vouchsafe.id/en/articles/11979598-how-does-sandbox-mode-work).
     */
    async listFlows(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Flow>> {
        const response = await this.listFlowsRaw(initOverrides);
        return await response.value();
    }

}
