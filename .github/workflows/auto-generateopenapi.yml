name: Auto-Update SDK

on:
  schedule:
    - cron: "0 2 * * *" # Daily at 2 AM UTC
  workflow_dispatch: # Allow manual trigger from GitHub UI

jobs:
  update-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push commits and tags

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm install

      - name: Generate SDK from OpenAPI spec
        run: npm run generate

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected in generated SDK"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in generated SDK"
          fi

      - name: Configure Git
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git add .
          git commit -m "chore: regenerate SDK from OpenAPI spec [skip ci]"

      - name: Bump version and create tag
        if: steps.changes.outputs.changed == 'true'
        run: |
          npm version patch -m "chore: release v%s [skip ci]"
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Push changes and tags
        if: steps.changes.outputs.changed == 'true'
        run: |
          git push origin main
          git push --tags

      - name: Publish to npm
        if: steps.changes.outputs.changed == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Summary
        if: steps.changes.outputs.changed == 'true'
        run: |
          echo "✅ SDK updated and published successfully!" >> $GITHUB_STEP_SUMMARY
          echo "📦 New version: ${{ env.NEW_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "🚀 Published to npm: @vouchsafe/node@${{ env.NEW_VERSION }}" >> $GITHUB_STEP_SUMMARY

      - name: No changes summary
        if: steps.changes.outputs.changed == 'false'
        run: |
          echo "ℹ️ No changes detected - skipping publish" >> $GITHUB_STEP_SUMMARY
